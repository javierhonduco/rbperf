name: CI

on: push

jobs:
  clang-format:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Install clang-format
      run: sudo apt-get install clang-format
    - name: Show clang-format version
      run: clang-format --version
    - name: Run clang-format
      run: clang-format -i bpf/* proto/rbperf.proto
    - name: diff
      run: git diff --exit-code

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Show system info
      run: |
        uname -a
    - name: Show Python version
      # TODO: Seems like there's some environment weirdness.
      # `sudo python3`, even with `-E` does not use the same
      # binary as `python3`. This is hacky but fixes it atm.
      run: |
        python3 --version
        sudo python3 --version
        sudo -E python3 --version
        sudo $pythonLocation/python --version
    - name: Install Python deps
      run: |
        python3 -m pip install --upgrade pip
        pip3 install setuptools
    - name: Install rbperf
      run: |
        pip3 install '.[dev]'
    - name: Install deps
      run: |
       sudo apt-get update && sudo apt-get install -y \
             curl \
             gnupg \
             binutils-dev \
             sudo \

    - name: Install BCC
      run: |
        echo "deb [trusted=yes] https://repo.iovisor.org/apt/bionic bionic-nightly main" | sudo tee /etc/apt/sources.list.d/iovisor.list
        sudo apt-get update
        sudo apt-get install bcc-tools libbcc-examples linux-headers-$(uname -r)

    - name: Run tests
      run: |
        # TODO(javierhonduco): The BPF tests have been broken for a while in
        # CI. Let's re-enable this as soon as CI is fixed.
        #
        # sudo $pythonLocation/python -m unittest discover tests test_rbperf.py
        bin/test poke
        bin/test handlers
        bin/test storage

    - name: Run mypy
      run: |
        bin/typecheck

# TODO(javierhonduco):
#   - Compiling the protobuf compiler takes ages in CI,
#   maybe we could cache the binary?
#   - Once our Proto is stable, we must add a linter to
#   verify changes are backwards compatible
#
#    - name: Install the Protobuf compiler
#      run: |
#        sudo apt-get install autoconf automake libtool curl make g++ unzip -y
#        git clone https://github.com/google/protobuf.git
#        cd protobuf
#        git submodule update --init --recursive
#        ./autogen.sh
#        ./configure
#        make
#        make check
#        sudo make install
#        sudo ldconfig
#
#    - name: Run Protocol Buffers compiler
#      run: |
#        bin/proto
#        protoc --version
#        git diff --exit-code
